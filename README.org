* Intro

All magit-gptcommit =commit[1:]= generated by magit-gptcommit.

[![magit-gptcommit intro](https://img.youtube.com/vi/TFB60_VNlUc/0.jpg)](https://www.youtube.com/watch?v=TFB60_VNlUc)

* Dependency

- [[https://magit.vc/][magit]]
- curl
- [[https://github.com/karthink/gptel][gptel]]

* Setup

magit-gptcommit depends on [[https://github.com/karthink/gptel][gptel]]. Please read the [[https://github.com/karthink/gptel?tab=readme-ov-file#setup][documentation]] of gptel for more configuration details and provide the method to configure OpenAI here.

Procure an [[https://platform.openai.com/account/api-keys][OpenAI API key]].

two way to setup a key:

- Recommend: Storing in ~/.authinfo. By default, “api.openai.com” is used as HOST and “apikey” as USER.
  #+begin_src
  machine api.openai.com login apikey password TOKEN
  #+end_src
- Another: Set =gptel-api-key= to the key.

* Usage


|----------------------------------+-----------------------------------------------------------------------------------------|
| *Command*                        | Description                                                                             |
|----------------------------------+-----------------------------------------------------------------------------------------|
| =magit-gptcommit-generate=       | Generate gptcommit message and insert it into magit buffer.                             |
| =magit-gptcommit-commit-create=  | Execute `magit-commit-create' and bring gptcommit message to editor.                    |
| =magit-gptcommit-commit-quick=   | Accept gptcommit message and make a commit with current staged.                         |
| =magit-gptcommit-commit-accept=  | Call on =COMMIT_EDITMSG= buffer, Accept gptcommit message after saving current message. |
| =magit-gptcommit-abort=          | Abort the query process of current Repository.
| =magit-gptcommit-remove-section= | Remove the gptcommit section from the current magit buffer.
|----------------------------------+-----------------------------------------------------------------------------------------|

|--------------------------------+----------------------------------------------------------------------------------------------|
| *Variable*                     | Description                                                                                  |
|--------------------------------+----------------------------------------------------------------------------------------------|
| =magit-gptcommit--prompt=      | Prompt.                                                                                      |
| =magit-gptcommit--max-token=   | Default 4096, magit-gptcommit will truncate excessive characters based on 1 token = 4 chars  |
| =magit-gptcommit--cache=       | Cache of last generated commit message.                                                      |
| =magit-gptcommit--cache-limit= | Cache size, default is 30                                                                    |
|--------------------------------+----------------------------------------------------------------------------------------------|

* Todo

- [ ] Improve prompt for better usability
  - There is still a lot of room for optimization. One issue is the context limitation, for example, GPT3.5 can only handle 4k tokens and will explode if a file is submitted casually; currently, it is simply truncated roughly according to proportions. Another approach is similar to [[https://github.com/zurawiki/gptcommit][gptcommit]], summarizing each file once with diff and then integrating all the summaries to generate a commit. However, this method requires n + 2 requests to generate one message.
- [ ] LRU Cache or Disk Cache
- [ ] NO Stream
- [ ] Other LLM Support

* Credit

- [[https://github.com/karthink/gptel][gptel]] Great project.
- [[https://github.com/zurawiki/gptcommit][gptcommit]] Very helpful, Prompt modified from this project.
- [[https://github.com/alphapapa/magit-todos][magit-todos]] This project has been of great help to me in learning magit development.
